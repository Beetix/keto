// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: keto/acl/v1/acl_service.proto

package acl

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RelationTupleWriteDelta_Action int32

const (
	// Unspecified.
	// The `WriteRelationTuples` RPC ignores this
	// RelationTupleWriteDelta if no action is specified.
	RelationTupleWriteDelta_ACTION_UNSPECIFIED RelationTupleWriteDelta_Action = 0
	// Insertion or if already exists, update of the RelationTuple.
	RelationTupleWriteDelta_UPSERT RelationTupleWriteDelta_Action = 1
	// Insertion of the RelationTuple.
	// The `WriteRelationTuples` RPC errors if the RelationTuple already exists.
	RelationTupleWriteDelta_INSERT RelationTupleWriteDelta_Action = 2
	// Update of the existing RelationTuple.
	// The `WriteRelationTuples` RPC errors if the RelationTuple does not exist.
	RelationTupleWriteDelta_UPDATE RelationTupleWriteDelta_Action = 3
	// Deletion of the RelationTuple.
	// The `WriteRelationTuples` RPC is silent and does not error in case
	// the RelationTuple does not exist.
	RelationTupleWriteDelta_DELETE RelationTupleWriteDelta_Action = 4
)

// Enum value maps for RelationTupleWriteDelta_Action.
var (
	RelationTupleWriteDelta_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "UPSERT",
		2: "INSERT",
		3: "UPDATE",
		4: "DELETE",
	}
	RelationTupleWriteDelta_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"UPSERT":             1,
		"INSERT":             2,
		"UPDATE":             3,
		"DELETE":             4,
	}
)

func (x RelationTupleWriteDelta_Action) Enum() *RelationTupleWriteDelta_Action {
	p := new(RelationTupleWriteDelta_Action)
	*p = x
	return p
}

func (x RelationTupleWriteDelta_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationTupleWriteDelta_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_keto_acl_v1_acl_service_proto_enumTypes[0].Descriptor()
}

func (RelationTupleWriteDelta_Action) Type() protoreflect.EnumType {
	return &file_keto_acl_v1_acl_service_proto_enumTypes[0]
}

func (x RelationTupleWriteDelta_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationTupleWriteDelta_Action.Descriptor instead.
func (RelationTupleWriteDelta_Action) EnumDescriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{7, 0}
}

type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The related object in this check.
	Object *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	// The relation this check.
	Relation string `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	// The concrete subject id to check.
	SubjectId string `protobuf:"bytes,3,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	// Optional. The least snapshot time of the used
	// serverside data to compute the response of this check.
	//
	// If specified requests to perform
	// the check on only near up to-date ACLs.
	//
	// *This recommended for low latency and where checks
	// are allowed to perform on ACLs that are a bit stale
	// (stale => not up to date, but still only differs some
	// millis or seconds).
	//
	// If not specified performs the check on most up to-date
	// ACLs in case it is strictly required to do so.
	Zookie []byte `protobuf:"bytes,4,opt,name=zookie,proto3" json:"zookie,omitempty"`
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *CheckRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *CheckRequest) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *CheckRequest) GetZookie() []byte {
	if x != nil {
		return x.Zookie
	}
	return nil
}

type CheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// True if the specified subject id
	// is related to the requested Object.
	Allowed bool `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

type ListRelationTuplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The filter to query for relation tuples.
	// If none specified
	// TODO RelationTuple listing and querying is a quite more involved task than only passing in a Query structure
	// TODO e.g. filter by namespace, object, relation, subject, commit_time (create time) in combination with logical OR/AND operators
	// TODO See https://google.aip.dev/160
	// TODO We should use an expression engine for evaluation and SQL query building
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// The ordering of the queried relation tuples.
	// TODO See https://google.aip.dev/132
	OrderBy string `protobuf:"bytes,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// Optional. The least snapshot time of
	// the used serverside data in the response.
	Zookie []byte `protobuf:"bytes,3,opt,name=zookie,proto3" json:"zookie,omitempty"`
	// Optional. The maximum number of RelationTuples to return in the response.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. A pagination token returned from a previous call to `ListRelationTuples`
	// that indicates where this listing should continue from.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListRelationTuplesRequest) Reset() {
	*x = ListRelationTuplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationTuplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationTuplesRequest) ProtoMessage() {}

func (x *ListRelationTuplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationTuplesRequest.ProtoReflect.Descriptor instead.
func (*ListRelationTuplesRequest) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListRelationTuplesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListRelationTuplesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListRelationTuplesRequest) GetZookie() []byte {
	if x != nil {
		return x.Zookie
	}
	return nil
}

func (x *ListRelationTuplesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRelationTuplesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRelationTuplesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The relation tuples matching the list request.
	RelationTuples []*RelationTuple `protobuf:"bytes,1,rep,name=relation_tuples,json=relationTuples,proto3" json:"relation_tuples,omitempty"`
	// Optional. A pagination token returned from a previous call to `ListRelationTuples`
	// that indicates where this listing should continue from.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListRelationTuplesResponse) Reset() {
	*x = ListRelationTuplesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelationTuplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelationTuplesResponse) ProtoMessage() {}

func (x *ListRelationTuplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelationTuplesResponse.ProtoReflect.Descriptor instead.
func (*ListRelationTuplesResponse) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListRelationTuplesResponse) GetRelationTuples() []*RelationTuple {
	if x != nil {
		return x.RelationTuples
	}
	return nil
}

func (x *ListRelationTuplesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type WatchRelationTuplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchRelationTuplesRequest) Reset() {
	*x = WatchRelationTuplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRelationTuplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRelationTuplesRequest) ProtoMessage() {}

func (x *WatchRelationTuplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRelationTuplesRequest.ProtoReflect.Descriptor instead.
func (*WatchRelationTuplesRequest) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{4}
}

type WatchRelationTuplesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchRelationTuplesResponse) Reset() {
	*x = WatchRelationTuplesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchRelationTuplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRelationTuplesResponse) ProtoMessage() {}

func (x *WatchRelationTuplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRelationTuplesResponse.ProtoReflect.Descriptor instead.
func (*WatchRelationTuplesResponse) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{5}
}

type WriteRelationTuplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The write delta for the relation tuples operated in one single transaction.
	// Either all actions commit or no change takes effect on error.
	//
	// The tuple's etag is used for a consistent read-modify-write request flow.
	// If the etag is not present, the tuple is not validated against the state
	// of the serverside tuple and get operated anyway.
	RelationTupleDeltas []*RelationTupleWriteDelta `protobuf:"bytes,1,rep,name=relation_tuple_deltas,json=relationTupleDeltas,proto3" json:"relation_tuple_deltas,omitempty"`
}

func (x *WriteRelationTuplesRequest) Reset() {
	*x = WriteRelationTuplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRelationTuplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRelationTuplesRequest) ProtoMessage() {}

func (x *WriteRelationTuplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRelationTuplesRequest.ProtoReflect.Descriptor instead.
func (*WriteRelationTuplesRequest) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{6}
}

func (x *WriteRelationTuplesRequest) GetRelationTupleDeltas() []*RelationTupleWriteDelta {
	if x != nil {
		return x.RelationTupleDeltas
	}
	return nil
}

type RelationTupleWriteDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The target RelationTuple.
	RelationTuple *RelationTuple `protobuf:"bytes,1,opt,name=relation_tuple,json=relationTuple,proto3" json:"relation_tuple,omitempty"`
}

func (x *RelationTupleWriteDelta) Reset() {
	*x = RelationTupleWriteDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationTupleWriteDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationTupleWriteDelta) ProtoMessage() {}

func (x *RelationTupleWriteDelta) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationTupleWriteDelta.ProtoReflect.Descriptor instead.
func (*RelationTupleWriteDelta) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{7}
}

func (x *RelationTupleWriteDelta) GetRelationTuple() *RelationTuple {
	if x != nil {
		return x.RelationTuple
	}
	return nil
}

type WriteRelationTuplesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WriteRelationTuplesResponse) Reset() {
	*x = WriteRelationTuplesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keto_acl_v1_acl_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRelationTuplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRelationTuplesResponse) ProtoMessage() {}

func (x *WriteRelationTuplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keto_acl_v1_acl_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRelationTuplesResponse.ProtoReflect.Descriptor instead.
func (*WriteRelationTuplesResponse) Descriptor() ([]byte, []int) {
	return file_keto_acl_v1_acl_service_proto_rawDescGZIP(), []int{8}
}

var File_keto_acl_v1_acl_service_proto protoreflect.FileDescriptor

var file_keto_acl_v1_acl_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6b, 0x65, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63,
	0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x6b, 0x65,
	0x74, 0x6f, 0x2f, 0x61, 0x63, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a,
	0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x7a, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0x29, 0x0a,
	0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x7a, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x89, 0x01,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75,
	0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c,
	0x65, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x1a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x15, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x22, 0xae,
	0x01, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0d,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x22, 0x50, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x50, 0x53, 0x45, 0x52, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49,
	0x4e, 0x53, 0x45, 0x52, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x22,
	0x1d, 0x0a, 0x1b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x67,
	0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e,
	0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x19, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61,
	0x63, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x17,
	0xca, 0x41, 0x14, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x8d, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x2e,
	0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x17,
	0xca, 0x41, 0x14, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x91, 0x01, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x12,
	0x27, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e,
	0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x17, 0xca, 0x41, 0x14, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x91, 0x01, 0x0a, 0x0c,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x13,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70,
	0x6c, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6b,
	0x65, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x17, 0xca, 0x41, 0x14, 0x6b, 0x65, 0x74, 0x6f, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x42,
	0x6d, 0x0a, 0x12, 0x73, 0x68, 0x2e, 0x6f, 0x72, 0x79, 0x2e, 0x6b, 0x65, 0x74, 0x6f, 0x2e, 0x61,
	0x63, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41, 0x63, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x72,
	0x79, 0x2f, 0x6b, 0x65, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x65, 0x74, 0x6f, 0x2f,
	0x61, 0x63, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x63, 0x6c, 0xaa, 0x02, 0x0f, 0x4f, 0x72, 0x79,
	0x2e, 0x4b, 0x65, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x4f,
	0x72, 0x79, 0x5c, 0x4b, 0x65, 0x74, 0x6f, 0x5c, 0x41, 0x63, 0x6c, 0x5c, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_keto_acl_v1_acl_service_proto_rawDescOnce sync.Once
	file_keto_acl_v1_acl_service_proto_rawDescData = file_keto_acl_v1_acl_service_proto_rawDesc
)

func file_keto_acl_v1_acl_service_proto_rawDescGZIP() []byte {
	file_keto_acl_v1_acl_service_proto_rawDescOnce.Do(func() {
		file_keto_acl_v1_acl_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_keto_acl_v1_acl_service_proto_rawDescData)
	})
	return file_keto_acl_v1_acl_service_proto_rawDescData
}

var file_keto_acl_v1_acl_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_keto_acl_v1_acl_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_keto_acl_v1_acl_service_proto_goTypes = []interface{}{
	(RelationTupleWriteDelta_Action)(0), // 0: keto.acl.v1.RelationTupleWriteDelta.Action
	(*CheckRequest)(nil),                // 1: keto.acl.v1.CheckRequest
	(*CheckResponse)(nil),               // 2: keto.acl.v1.CheckResponse
	(*ListRelationTuplesRequest)(nil),   // 3: keto.acl.v1.ListRelationTuplesRequest
	(*ListRelationTuplesResponse)(nil),  // 4: keto.acl.v1.ListRelationTuplesResponse
	(*WatchRelationTuplesRequest)(nil),  // 5: keto.acl.v1.WatchRelationTuplesRequest
	(*WatchRelationTuplesResponse)(nil), // 6: keto.acl.v1.WatchRelationTuplesResponse
	(*WriteRelationTuplesRequest)(nil),  // 7: keto.acl.v1.WriteRelationTuplesRequest
	(*RelationTupleWriteDelta)(nil),     // 8: keto.acl.v1.RelationTupleWriteDelta
	(*WriteRelationTuplesResponse)(nil), // 9: keto.acl.v1.WriteRelationTuplesResponse
	(*Object)(nil),                      // 10: keto.acl.v1.Object
	(*RelationTuple)(nil),               // 11: keto.acl.v1.RelationTuple
}
var file_keto_acl_v1_acl_service_proto_depIdxs = []int32{
	10, // 0: keto.acl.v1.CheckRequest.object:type_name -> keto.acl.v1.Object
	11, // 1: keto.acl.v1.ListRelationTuplesResponse.relation_tuples:type_name -> keto.acl.v1.RelationTuple
	8,  // 2: keto.acl.v1.WriteRelationTuplesRequest.relation_tuple_deltas:type_name -> keto.acl.v1.RelationTupleWriteDelta
	11, // 3: keto.acl.v1.RelationTupleWriteDelta.relation_tuple:type_name -> keto.acl.v1.RelationTuple
	1,  // 4: keto.acl.v1.CheckService.Check:input_type -> keto.acl.v1.CheckRequest
	3,  // 5: keto.acl.v1.ReadService.ListRelationTuples:input_type -> keto.acl.v1.ListRelationTuplesRequest
	5,  // 6: keto.acl.v1.WatchService.WatchRelationTuples:input_type -> keto.acl.v1.WatchRelationTuplesRequest
	7,  // 7: keto.acl.v1.WriteService.WriteRelationTuples:input_type -> keto.acl.v1.WriteRelationTuplesRequest
	2,  // 8: keto.acl.v1.CheckService.Check:output_type -> keto.acl.v1.CheckResponse
	4,  // 9: keto.acl.v1.ReadService.ListRelationTuples:output_type -> keto.acl.v1.ListRelationTuplesResponse
	6,  // 10: keto.acl.v1.WatchService.WatchRelationTuples:output_type -> keto.acl.v1.WatchRelationTuplesResponse
	9,  // 11: keto.acl.v1.WriteService.WriteRelationTuples:output_type -> keto.acl.v1.WriteRelationTuplesResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_keto_acl_v1_acl_service_proto_init() }
func file_keto_acl_v1_acl_service_proto_init() {
	if File_keto_acl_v1_acl_service_proto != nil {
		return
	}
	file_keto_acl_v1_acl_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_keto_acl_v1_acl_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationTuplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelationTuplesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRelationTuplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchRelationTuplesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRelationTuplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationTupleWriteDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keto_acl_v1_acl_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRelationTuplesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_keto_acl_v1_acl_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_keto_acl_v1_acl_service_proto_goTypes,
		DependencyIndexes: file_keto_acl_v1_acl_service_proto_depIdxs,
		EnumInfos:         file_keto_acl_v1_acl_service_proto_enumTypes,
		MessageInfos:      file_keto_acl_v1_acl_service_proto_msgTypes,
	}.Build()
	File_keto_acl_v1_acl_service_proto = out.File
	file_keto_acl_v1_acl_service_proto_rawDesc = nil
	file_keto_acl_v1_acl_service_proto_goTypes = nil
	file_keto_acl_v1_acl_service_proto_depIdxs = nil
}
